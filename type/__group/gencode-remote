#!/bin/sh -e
#
# 2011-2015 Steven Armstrong (steven-cdist at armstrong.cc)
# 2011 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

name=${__object_id:?}
os=$(cat "${__global:?}/explorer/os")
state=$(cat "${__object:?}/parameter/state")


# Use short option names for portability
shorten_property() {
   case $1
   in
      gid) echo ' -g';;
      password) echo ' -p';;
      system) echo ' -r';;
   esac
}


if [ "${state}" = 'present' ]
then
   case ${os}
   in
      (freebsd)
         supported_change_properties='gid'
         ;;
      (*)
         supported_change_properties='gid password'
         ;;
   esac
   if cut -d: -f1 "${__object:?}/explorer/group" | grep -qxF -e "${name}"
   then
      # change existing
      for property in ${supported_change_properties}
      do
         if [ -f "${__object:?}/parameter/${property}" ]
         then
            new_value=$(cat "${__object:?}/parameter/${property}")
            unset -v current_value
            case ${property}
            in
               (password)
                  current_value=$(awk -F: '{ print $2 }' "${__object:?}/explorer/gshadow")
                  ;;
               (gid)
                  current_value=$(awk -F: '{ print $3 }' "${__object:?}/explorer/group")
                  ;;
            esac
            if [ "${new_value}" != "${current_value}" ]
            then
               set -- "$@" "$(shorten_property "${property}")" \'"${new_value}"\'
               echo "change ${property} ${new_value} ${current_value}" >>"${__messages_out:?}"
            fi
         fi
      done
      if [ $# -gt 0 ]
      then
         case ${os}
         in
            (freebsd)
               echo pw groupmod "$@" "${name}" ;;
            (*)
               echo groupmod "$@" "${name}" ;;
         esac
         echo mod >>"${__messages_out:?}"
      fi
   else
      # create new
      for property in ${supported_change_properties}
      do
         if [ -f "${__object:?}/parameter/${property}" ]
         then
            new_value=$(cat "${__object:?}/parameter/${property}")
            if [ -z "${new_value}" ]
            then
               # Boolean parameters have no value
               set -- "$@" "$(shorten_property "${property}")"
            else
               set -- "$@" "$(shorten_property "${property}")" \'"${new_value}"\'
            fi
         fi
      done
      case ${os}
      in
         (freebsd)
            echo pw groupadd "${name}" "$@" ;;
         (*)
            echo groupadd "$@" "${name}" ;;
      esac
   fi
else
   # delete existing
   if cut -d: -f1 "${__object:?}/explorer/group" | grep -qxF -e "${name}"
   then
      case ${os}
      in
         (freebsd)
            echo pw groupdel "${name}" ;;
         (*)
            echo groupdel "${name}" ;;
      esac
      echo remove >>"${__messages_out:?}"
   fi
fi
